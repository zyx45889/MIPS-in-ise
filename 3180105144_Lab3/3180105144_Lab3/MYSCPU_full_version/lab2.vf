////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : lab2.vf
// /___/   /\     Timestamp : 07/03/2020 12:11:25
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath C:/Users/86133/Desktop/ise/3180105144_Lab3/3180105144_Lab3/MYSCPU_full_version/ipcore_dir -intstyle ise -family kintex7 -verilog C:/Users/86133/Desktop/ise/3180105144_Lab3/3180105144_Lab3/MYSCPU_full_version/lab2.vf -w C:/Users/86133/Desktop/ise/3180105144_Lab3/3180105144_Lab3/MYSCPU_full_version/lab2.sch
//Design Name: lab2
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module SSeg7_Dev_MUSER_lab2(clk, 
                            flash, 
                            Hexs, 
                            LES, 
                            point, 
                            rst, 
                            Start, 
                            SW0, 
                            seg_clk, 
                            seg_clrn, 
                            SEG_PEN, 
                            seg_sout);

    input clk;
    input flash;
    input [31:0] Hexs;
    input [7:0] LES;
    input [7:0] point;
    input rst;
    input Start;
    input SW0;
   output seg_clk;
   output seg_clrn;
   output SEG_PEN;
   output seg_sout;
   
   wire [63:0] XLXN_1;
   wire [63:0] XLXN_2;
   wire [63:0] XLXN_12;
   
   P2S  XLXI_1 (.clk(clk), 
               .P_Data(XLXN_12[63:0]), 
               .rst(rst), 
               .Serial(Start), 
               .EN(SEG_PEN), 
               .sout(seg_sout), 
               .s_clk(seg_clk), 
               .s_clrn(seg_clrn));
   HexTo8SEG  XLXI_3 (.flash(flash), 
                     .Hexs(Hexs[31:0]), 
                     .LES(LES[7:0]), 
                     .point(point[7:0]), 
                     .SEG_TXT(XLXN_1[63:0]));
   MUXSH2M  XLXI_4 (.a(XLXN_1[63:0]), 
                   .b(XLXN_2[63:0]), 
                   .sel(SW0), 
                   .o(XLXN_12[63:0]));
   Seg_map  XLXI_5 (.Disp_num({Hexs[31:0], Hexs[31:0]}), 
                   .SSeg_map(XLXN_2[63:0]));
endmodule
`timescale 1ns / 1ps

module SCPU_MUSER_lab2(clk, 
                       Data_in, 
                       inst_in, 
                       INT, 
                       rst, 
                       Addr_out, 
                       Data_out, 
                       infor, 
                       mem_r, 
                       mem_w, 
                       PC_out);

    input clk;
    input [31:0] Data_in;
    input [31:0] inst_in;
    input INT;
    input rst;
   output [31:0] Addr_out;
   output [31:0] Data_out;
   output [31:0] infor;
   output mem_r;
   output mem_w;
   output [31:0] PC_out;
   
   wire [31:0] A;
   wire [31:0] AA;
   wire [31:0] B;
   wire [31:0] BB;
   wire [31:0] C1;
   wire Jal;
   wire Jr;
   wire LUI;
   wire MemReg;
   wire N;
   wire [2:0] op;
   wire [31:0] Reg_data_in;
   wire [4:0] Reg_des;
   wire [4:0] RN1;
   wire take;
   wire Wreg;
   wire [4:0] XLXN_11;
   wire [31:0] XLXN_15;
   wire [31:0] XLXN_16;
   wire [31:0] XLXN_20;
   wire XLXN_23;
   wire XLXN_30;
   wire XLXN_38;
   wire [31:0] XLXN_49;
   wire [31:0] XLXN_50;
   wire [31:0] XLXN_51;
   wire XLXN_52;
   wire [31:0] XLXN_53;
   wire [31:0] XLXN_57;
   wire XLXN_68;
   wire XLXN_71;
   wire XLXN_73;
   wire Y;
   wire [31:0] Data_out_DUMMY;
   wire [31:0] PC_out_DUMMY;
   wire [31:0] Addr_out_DUMMY;
   
   assign Addr_out[31:0] = Addr_out_DUMMY[31:0];
   assign Data_out[31:0] = Data_out_DUMMY[31:0];
   assign PC_out[31:0] = PC_out_DUMMY[31:0];
   PC  XLXI_1 (.clk(clk), 
              .datain(XLXN_53[31:0]), 
              .INT(INT), 
              .rst(rst), 
              .dataout(PC_out_DUMMY[31:0]));
   Adder32b  XLXI_2 (.A({N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, 
         N, N, N, N, N, N, N, N, N, N, N, Y, N, N}), 
                    .B(PC_out_DUMMY[31:0]), 
                    .C(AA[31:0]));
   FirstDecoder  XLXI_3 (.func(inst_in[5:0]), 
                        .opcode(inst_in[31:26]), 
                        .Beq(XLXN_71), 
                        .Bne(XLXN_73), 
                        .Jal(Jal), 
                        .JJal(XLXN_52), 
                        .Jr(Jr), 
                        .LUI(LUI), 
                        .MemReg(MemReg), 
                        .operation(op[2:0]), 
                        .ReadM(mem_r), 
                        .RtRd(XLXN_30), 
                        .shift(XLXN_23), 
                        .SrcB(XLXN_38), 
                        .Wreg(Wreg), 
                        .WriteM(mem_w));
   Regfile  XLXI_4 (.clk(clk), 
                   .datain(Reg_data_in[31:0]), 
                   .Des(Reg_des[4:0]), 
                   .RN1(RN1[4:0]), 
                   .RN2(inst_in[20:16]), 
                   .rst(rst), 
                   .Wreg(Wreg), 
                   .A(A[31:0]), 
                   .B(Data_out_DUMMY[31:0]), 
                   .info(infor[31:0]));
   MUX2T1_5  XLXI_6 (.A(inst_in[20:16]), 
                    .B(inst_in[15:11]), 
                    .S(XLXN_30), 
                    .C(XLXN_11[4:0]));
   MUX2T1_5  XLXI_7 (.A(XLXN_11[4:0]), 
                    .B({Y, Y, Y, Y, Y}), 
                    .S(Jal), 
                    .C(Reg_des[4:0]));
   Ext_32  XLXI_8 (.imm_16(inst_in[15:0]), 
                  .imm_32(XLXN_16[31:0]));
   LuiExt  XLXI_9 (.imm(inst_in[15:0]), 
                  .LuiData(XLXN_15[31:0]));
   MUX2T1_32  XLXI_10 (.A(XLXN_20[31:0]), 
                      .B(XLXN_15[31:0]), 
                      .S(LUI), 
                      .C(Reg_data_in[31:0]));
   ALUSCPU  XLXI_11 (.A(A[31:0]), 
                    .B(B[31:0]), 
                    .op(op[2:0]), 
                    .C(Addr_out_DUMMY[31:0]), 
                    .result1(), 
                    .S(), 
                    .zero(XLXN_68));
   MUX2T1_32  XLXI_12 (.A(Data_out_DUMMY[31:0]), 
                      .B(XLXN_16[31:0]), 
                      .S(XLXN_38), 
                      .C(B[31:0]));
   MUX2T1_32  XLXI_14 (.A(C1[31:0]), 
                      .B(AA[31:0]), 
                      .S(Jal), 
                      .C(XLXN_20[31:0]));
   LeftShift2  XLXI_15 (.Datain(XLXN_16[31:0]), 
                       .Dataout(BB[31:0]));
   Adder32b  XLXI_16 (.A(AA[31:0]), 
                     .B(BB[31:0]), 
                     .C(XLXN_49[31:0]));
   MUX2T1_32  XLXI_17 (.A(AA[31:0]), 
                      .B(XLXN_49[31:0]), 
                      .S(take), 
                      .C(XLXN_51[31:0]));
   MUX2T1_32  XLXI_18 (.A(XLXN_51[31:0]), 
                      .B(XLXN_50[31:0]), 
                      .S(XLXN_52), 
                      .C(XLXN_57[31:0]));
   J  XLXI_19 (.imm(inst_in[25:0]), 
              .PC(AA[31:0]), 
              .dataout(XLXN_50[31:0]));
   MUX2T1_32  XLXI_20 (.A(XLXN_57[31:0]), 
                      .B(A[31:0]), 
                      .S(Jr), 
                      .C(XLXN_53[31:0]));
   Taken  XLXI_21 (.beq(XLXN_71), 
                  .bne(XLXN_73), 
                  .zero(XLXN_68), 
                  .taken(take));
   GND  XLXI_22 (.G(N));
   VCC  XLXI_23 (.P(Y));
   MUX2T1_5  XLXI_24 (.A(inst_in[25:21]), 
                     .B(inst_in[20:16]), 
                     .S(XLXN_23), 
                     .C(RN1[4:0]));
   MUX2T1_32  XLXI_25 (.A(Addr_out_DUMMY[31:0]), 
                      .B(Data_in[31:0]), 
                      .S(MemReg), 
                      .C(C1[31:0]));
endmodule
`timescale 1ns / 1ps

module lab2(BTN_x, 
            BTN_y, 
            clk_100mhz, 
            RSTN, 
            SW, 
            CR, 
            led_clk, 
            led_clrn, 
            LED_PEN, 
            led_sout, 
            RDY, 
            readn, 
            seg_clk, 
            seg_clrn, 
            SEG_PEN, 
            seg_sout);

    input [4:0] BTN_x;
    input [3:0] BTN_y;
    input clk_100mhz;
    input RSTN;
    input [15:0] SW;
   output CR;
   output led_clk;
   output led_clrn;
   output LED_PEN;
   output led_sout;
   output RDY;
   output readn;
   output seg_clk;
   output seg_clrn;
   output SEG_PEN;
   output seg_sout;
   
   wire [31:0] Addr_out;
   wire [31:0] Ai;
   wire [31:0] Bi;
   wire [7:0] blink;
   wire [3:0] BTN_OK;
   wire Clk_CPU;
   wire [31:0] Counter_out;
   wire [31:0] CPU2IO;
   wire [31:0] Data_in;
   wire [31:0] Data_out;
   wire [31:0] Disp_num;
   wire [31:0] Div;
   wire GPIOF0;
   wire [31:0] inst;
   wire IO_clk;
   wire [15:0] LED_out;
   wire [7:0] LE_out;
   wire NO;
   wire [31:0] PC;
   wire [7:0] point_out;
   wire [3:0] Pulse;
   wire rst;
   wire [15:0] SW_OK;
   wire V5;
   wire [4:0] XLXN_9;
   wire XLXN_61;
   wire [9:0] XLXN_93;
   wire [31:0] XLXN_94;
   wire XLXN_95;
   wire [31:0] XLXN_96;
   wire XLXN_99;
   wire XLXN_106;
   wire XLXN_107;
   wire XLXN_108;
   wire [1:0] XLXN_110;
   wire XLXN_115;
   wire XLXN_118;
   wire XLXN_122;
   wire XLXN_123;
   wire XLXN_124;
   wire [31:0] XLXN_133;
   wire RDY_DUMMY;
   wire readn_DUMMY;
   wire [4:0] BTN_x_DUMMY;
   
   assign RDY = RDY_DUMMY;
   assign readn = readn_DUMMY;
   assign BTN_x_DUMMY[4:0] = BTN_x[4:0];
   ROM_D  XLXI_1 (.a(PC[11:2]), 
                 .spo(inst[31:0]));
   RAM_B  XLXI_2 (.a(XLXN_93[9:0]), 
                 .clk(XLXN_61), 
                 .d(XLXN_94[31:0]), 
                 .we(XLXN_95), 
                 .spo(XLXN_96[31:0]));
   Multi_8CH32  XLXI_3 (.clk(IO_clk), 
                       .Data0(CPU2IO[31:0]), 
                       .EN(XLXN_99), 
                       .LES({NO, NO, NO, NO, NO, NO, NO, NO, NO, NO, NO, NO, 
         NO, NO, NO, NO, NO, NO, NO, NO, NO, NO, NO, NO, NO, NO, NO, NO, NO, 
         NO, NO, NO, NO, NO, NO, NO, NO, NO, NO, NO, NO, NO, NO, NO, NO, NO, 
         NO, NO, NO, NO, NO, NO, NO, NO, NO, NO, NO, NO, NO, NO, NO, NO, NO, 
         NO}), 
                       .point_in({Div[31:0], Div[31:0]}), 
                       .rst(rst), 
                       .Test(SW_OK[7:5]), 
                       .Test_Data1(XLXN_133[31:0]), 
                       .Test_Data2(inst[31:0]), 
                       .Test_Data3(Counter_out[31:0]), 
                       .Test_Data4(Addr_out[31:0]), 
                       .Test_Data5(Data_out[31:0]), 
                       .Test_Data6(Data_in[31:0]), 
                       .Test_Data7(PC[31:0]), 
                       .Disp_num(Disp_num[31:0]), 
                       .LE_out(LE_out[7:0]), 
                       .point_out(point_out[7:0]));
   SPIO  XLXI_4 (.clk(IO_clk), 
                .EN(GPIOF0), 
                .P_Data(CPU2IO[31:0]), 
                .rst(rst), 
                .Start(Div[20]), 
                .counter_set(XLXN_110[1:0]), 
                .GPIOf0(), 
                .led_clk(led_clk), 
                .led_clrn(led_clrn), 
                .LED_out(LED_out[15:0]), 
                .LED_PEN(LED_PEN), 
                .led_sout(led_sout));
   SAnti_jitter  XLXI_5 (.clk(clk_100mhz), 
                        .Key_y(BTN_y[3:0]), 
                        .readn(readn_DUMMY), 
                        .RSTN(RSTN), 
                        .SW(SW[15:0]), 
                        .BTN_OK(BTN_OK[3:0]), 
                        .CR(CR), 
                        .Key_out(XLXN_9[4:0]), 
                        .Key_ready(RDY_DUMMY), 
                        .Key_x(BTN_x_DUMMY[4:0]), 
                        .pulse_out(Pulse[3:0]), 
                        .rst(rst), 
                        .SW_OK(SW_OK[15:0]));
   clk_div  XLXI_6 (.clk(clk_100mhz), 
                   .rst(rst), 
                   .SW2(SW_OK[2]), 
                   .clkdiv(Div[31:0]), 
                   .Clk_CPU(Clk_CPU));
   SEnter_2_32  XLXI_7 (.BTN(BTN_OK[2:0]), 
                       .clk(clk_100mhz), 
                       .Ctrl({SW_OK[7:5], SW_OK[15], SW_OK[0]}), 
                       .Din(XLXN_9[4:0]), 
                       .D_ready(RDY_DUMMY), 
                       .Ai(Ai[31:0]), 
                       .Bi(Bi[31:0]), 
                       .blink(blink[7:0]), 
                       .readn(readn_DUMMY));
   VCC  XLXI_14 (.P(V5));
   GND  XLXI_15 (.G(NO));
   INV  XLXI_20 (.I(clk_100mhz), 
                .O(XLXN_61));
   SSeg7_Dev_MUSER_lab2  XLXI_21 (.clk(clk_100mhz), 
                                 .flash(Div[25]), 
                                 .Hexs(Disp_num[31:0]), 
                                 .LES(LE_out[7:0]), 
                                 .point(point_out[7:0]), 
                                 .rst(rst), 
                                 .Start(Div[20]), 
                                 .SW0(SW_OK[0]), 
                                 .seg_clk(seg_clk), 
                                 .seg_clrn(seg_clrn), 
                                 .SEG_PEN(SEG_PEN), 
                                 .seg_sout(seg_sout));
   SCPU_MUSER_lab2  XLXI_22 (.clk(Clk_CPU), 
                            .Data_in(Data_in[31:0]), 
                            .inst_in(inst[31:0]), 
                            .INT(XLXN_115), 
                            .rst(rst), 
                            .Addr_out(Addr_out[31:0]), 
                            .Data_out(Data_out[31:0]), 
                            .infor(XLXN_133[31:0]), 
                            .mem_r(XLXN_118), 
                            .mem_w(XLXN_122), 
                            .PC_out(PC[31:0]));
   MIO_BUS  XLXI_23 (.addr_bus(Addr_out[31:0]), 
                    .BTN(BTN_OK[3:0]), 
                    .clk(clk_100mhz), 
                    .counter_out(Counter_out[31:0]), 
                    .counter0_out(XLXN_115), 
                    .counter1_out(XLXN_106), 
                    .counter2_out(XLXN_107), 
                    .Cpu_data2bus(Data_out[31:0]), 
                    .led_out(LED_out[15:0]), 
                    .mem_w(XLXN_124), 
                    .ram_data_out(XLXN_96[31:0]), 
                    .rst(rst), 
                    .SW(SW_OK[15:0]), 
                    .counter_we(XLXN_108), 
                    .Cpu_data4bus(Data_in[31:0]), 
                    .data_ram_we(XLXN_95), 
                    .GPIOe0000000_we(XLXN_99), 
                    .GPIOf0000000_we(GPIOF0), 
                    .Peripheral_in(CPU2IO[31:0]), 
                    .ram_addr(XLXN_93[9:0]), 
                    .ram_data_in(XLXN_94[31:0]));
   Counter_x  XLXI_24 (.clk(IO_clk), 
                      .clk0(Div[6]), 
                      .clk1(Div[9]), 
                      .clk2(Div[11]), 
                      .counter_ch(XLXN_110[1:0]), 
                      .counter_val(CPU2IO[31:0]), 
                      .counter_we(XLXN_108), 
                      .rst(rst), 
                      .counter_out(Counter_out[31:0]), 
                      .counter0_OUT(XLXN_115), 
                      .counter1_OUT(XLXN_106), 
                      .counter2_OUT(XLXN_107));
   INV  XLXI_25 (.I(Clk_CPU), 
                .O(IO_clk));
   AND2  XLXI_29 (.I0(XLXN_123), 
                 .I1(XLXN_122), 
                 .O(XLXN_124));
   INV  XLXI_30 (.I(XLXN_118), 
                .O(XLXN_123));
endmodule
